[pytest]
# Pytest Configuration for AlignCV V2

# Minimum version
minversion = 7.0

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Async support
asyncio_mode = auto

# Coverage settings
addopts = 
    --verbose
    --strict-markers
    --cov=backend/v2
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=json:coverage.json
    --cov-fail-under=85
    -ra
    --maxfail=1
    --tb=short

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    e2e: marks tests as end-to-end tests
    unit: marks tests as unit tests
    requires_db: marks tests that require database
    requires_redis: marks tests that require Redis
    requires_api_keys: marks tests that require external API keys

# Ignore warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Environment
env_files = .env.test

# Timeout
timeout = 300

# Coverage exclusions
[coverage:run]
omit =
    */tests/*
    */migrations/*
    */__pycache__/*
    */venv/*
    */.venv/*
    */node_modules/*
    */test_*.py
    */conftest.py

[coverage:report]
precision = 2
skip_empty = True
sort = Cover

# Exclude from coverage
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod
